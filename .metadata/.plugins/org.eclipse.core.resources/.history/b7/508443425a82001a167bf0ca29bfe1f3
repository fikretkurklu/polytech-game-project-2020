package automaton;

import java.util.HashMap;

import game.Entity;
import playerActions.Action;
import playerActions.IAction;
import playerCond.*;

public class Automaton {

	State initialState;
	HashMap<State, Transition[]> mapTransitions;
	
	
	public Automaton(State state, HashMap<State, Transition[]> transitions) {
		initialState = state;
		mapTransitions = transitions;
	}
	
	public void step(Entity e) {
		Transition[] transitions = mapTransitions.get(e.getCurrentState());
		if (transitions != null) {
			for (int i = 0; i < transitions.length; i++) {
				if (transitions[i].m_condition.eval(e)) {
					Action actions[] = (Action[]) transitions[i].m_actions;
					if (actions.length == 1) {
						actions[0].apply(e);
					// Tirage alÃ©atoire parmi les actions possibles pour cette transition
					}else { 
						int randomNumber = (int) Math.random() * 100;
						for (int j = 0 ; j < actions.length ; j++) {
							if (randomNumber < actions[i].percentage) {
								actions[j].apply(e);
								e.setCurrentState(transitions[j].finalState);
								break;
							}
						}
					}
				}
			}
		}
	
	}
	
	public State getInitialState() {
		return initialState;
	}
}
